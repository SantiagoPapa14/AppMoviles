// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  userId          Int          @id @default(autoincrement())
  email           String       @unique
  username        String
  hashedPassword  String
  name            String       @default("")
  profileImage    String?
  summaries       Summary[]
  quizzes         Quiz[]
  flashcards      Flashcard[]
  mentalMaps      MindMap[]
}

model Summary {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [userId])
}

model Quiz {
  id        Int      @id @default(autoincrement())
  title     String
  questions String   // JSON string or another appropriate type
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [userId])
}

model Flashcard {
  id        Int      @id @default(autoincrement())
  question  String
  answer    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [userId])
}

model MindMap {
  id        Int      @id @default(autoincrement())
  title     String
  nodes     Node[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [userId])
	@@map("MindMap")
}

model Node {
  id          Int      @id @default(autoincrement())
  content     String
  parentId    Int?
  mindMapId Int
  MindMap   MindMap @relation(fields: [mindMapId], references: [id])
  parent      Node?     @relation("NodeToNode", fields: [parentId], references: [id])
  children    Node[]    @relation("NodeToNode")
}